<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="0" hostname="DESKTOP-78H043L" name="com.temp.test.TestWeather" tests="3" failures="0" timestamp="2020-10-09T13:11:39 IST" time="0.009" errors="1">
  <testcase name="TestGetCities" time="0.001" classname="com.temp.test.TestWeather"/>
  <system-out/>
  <testcase name="createList" time="0.005" classname="com.temp.test.TestWeather"/>
  <system-out/>
  <testcase name="TestGetTemp" time="0.003" classname="com.temp.test.TestWeather">
    <error type="org.testng.internal.reflect.MethodMatcherException" message="
[public void com.temp.test.TestWeather.TestGetTemp(java.lang.Object,java.lang.Object,java.lang.Object)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: TestGetTemp([Parameter{index=0, type=java.lang.Object, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.Object, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.Object, declaredAnnotations=[]}])
Arguments: [(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a]">
      <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
[public void com.temp.test.TestWeather.TestGetTemp(java.lang.Object,java.lang.Object,java.lang.Object)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: TestGetTemp([Parameter{index=0, type=java.lang.Object, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.Object, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.Object, declaredAnnotations=[]}])
Arguments: [(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a,(java.lang.String) a]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:43)
at org.testng.internal.Parameters.injectParameters(Parameters.java:905)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:34)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- TestGetTemp -->
  <system-out/>
</testsuite> <!-- com.temp.test.TestWeather -->
